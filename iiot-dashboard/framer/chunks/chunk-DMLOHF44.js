// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 28f3299f349ba0ff "Sense View Web App", do not edit manually */
// /:https://framerusercontent.com/modules/Z5xmLQFgrHwhySDOsKSW/Ytn8OJnE1TegSJdJklVD/A1Al_1Wam.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, useComponentViewport, useLocaleInfo, useVariantState, withCSS, withFX } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var MotionDivWithFX = withFX(motion.div);
var serializationHash = "framer-QcXIO";
var variantClassNames = { kpyb84WUT: "framer-v-ydctlg" };
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var transition2 = { bounce: 0.25, delay: 0, duration: 1, type: "spring" };
var animation = { opacity: 0, rotate: 360, rotateX: 0, rotateY: 0, scale: 1, skewX: 0, skewY: 0, x: 0, y: 0 };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var getProps = ({ background, height, id, width, ...props }) => {
  return { ...props, HRpYUqfiX: background ?? props.HRpYUqfiX ?? "var(--token-eb9f2500-18d9-4fc2-9121-acbe433c2ab4, rgba(33, 181, 40, 0.3))" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, HRpYUqfiX, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ defaultVariant: "kpyb84WUT", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-ydctlg", className, classNames), "data-framer-name": "Variant 1", layoutDependency, layoutId: "kpyb84WUT", ref: refBinding, style: { backgroundColor: HRpYUqfiX, borderBottomLeftRadius: 20, borderBottomRightRadius: 20, borderTopLeftRadius: 20, borderTopRightRadius: 20, ...style }, children: /* @__PURE__ */ _jsx(MotionDivWithFX, { __framer__loop: animation, __framer__loopEffectEnabled: true, __framer__loopPauseOffscreen: false, __framer__loopRepeatDelay: 0, __framer__loopRepeatType: "mirror", __framer__loopTransition: transition2, __perspectiveFX: false, __smartComponentFX: true, __targetOpacity: 1, className: "framer-11wlfeh", layoutDependency, layoutId: "Q2TRbkC03", style: { backgroundColor: "var(--token-c168b98c-2e59-445e-b5bc-c16129fabd04, rgb(33, 181, 40))", borderBottomLeftRadius: 10, borderBottomRightRadius: 10, borderTopLeftRadius: 10, borderTopRightRadius: 10 } }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-QcXIO.framer-j2o769, .framer-QcXIO .framer-j2o769 { display: block; }", ".framer-QcXIO.framer-ydctlg { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 20px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 20px; }", ".framer-QcXIO .framer-11wlfeh { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 12px); overflow: visible; position: relative; width: 12px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-QcXIO.framer-ydctlg { gap: 0px; } .framer-QcXIO.framer-ydctlg > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-QcXIO.framer-ydctlg > :first-child { margin-left: 0px; } .framer-QcXIO.framer-ydctlg > :last-child { margin-right: 0px; } }"];
var FramerA1Al_1Wam = withCSS(Component, css, "framer-QcXIO");
var stdin_default = FramerA1Al_1Wam;
FramerA1Al_1Wam.displayName = "Time circle animation";
FramerA1Al_1Wam.defaultProps = { height: 20, width: 20 };
addPropertyControls(FramerA1Al_1Wam, { HRpYUqfiX: { defaultValue: 'var(--token-eb9f2500-18d9-4fc2-9121-acbe433c2ab4, rgba(33, 181, 40, 0.3)) /* {"name":"Status green BG"} */', title: "Background", type: ControlType.Color } });
addFonts(FramerA1Al_1Wam, [{ explicitInter: true, fonts: [] }], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};

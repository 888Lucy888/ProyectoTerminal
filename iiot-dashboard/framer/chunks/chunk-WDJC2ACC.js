// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 28f3299f349ba0ff "Sense View Web App", do not edit manually */
import {
  Icon
} from "./chunk-BTSBQWPZ.js";

// /:https://framerusercontent.com/modules/UkmGpTdSN01bbv8ZG0l8/pcdjDpnBkNyEjDaNcFet/yErWrle5x.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, getFonts, SmartComponentScopedContainer, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var PhosphorFonts = getFonts(Icon);
var enabledGestures = { lBM8FVVa_: { hover: true } };
var serializationHash = "framer-vC2H6";
var variantClassNames = { lBM8FVVa_: "framer-v-1h3wmky" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var getProps = ({ click, height, id, width, ...props }) => {
  return { ...props, Z4kvvd6jc: click ?? props.Z4kvvd6jc };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, Z4kvvd6jc, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ defaultVariant: "lBM8FVVa_", enabledGestures, ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTap10p3lf6 = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (Z4kvvd6jc) {
      const res = await Z4kvvd6jc(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-1h3wmky", className, classNames), "data-framer-name": "Variant 1", "data-highlight": true, layoutDependency, layoutId: "lBM8FVVa_", onTap: onTap10p3lf6, ref: refBinding, style: { backgroundColor: "rgba(15, 15, 15, 0.37)", borderBottomLeftRadius: 12, borderBottomRightRadius: 12, borderTopLeftRadius: 12, borderTopRightRadius: 12, ...style }, variants: { "lBM8FVVa_-hover": { backgroundColor: "var(--token-4bd2e29c-7da8-4c62-8d92-a0eae155ad0d, rgb(207, 207, 207))" } }, ...addPropertyOverrides({ "lBM8FVVa_-hover": { "data-framer-name": void 0 } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx(ComponentViewportProvider, { children: /* @__PURE__ */ _jsx(SmartComponentScopedContainer, { className: "framer-1fmr7-container", isAuthoredByUser: true, isModuleExternal: true, layoutDependency, layoutId: "YRjeZDfOT-container", nodeId: "YRjeZDfOT", rendersWithMotion: true, scopeId: "yErWrle5x", children: /* @__PURE__ */ _jsx(Icon, { color: "var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33))", height: "100%", iconSearch: "House", iconSelection: "CaretDown", id: "YRjeZDfOT", layoutId: "YRjeZDfOT", mirrored: false, selectByList: true, style: { height: "100%", width: "100%" }, weight: "light", width: "100%" }) }) }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-vC2H6.framer-6w9g0r, .framer-vC2H6 .framer-6w9g0r { display: block; }", ".framer-vC2H6.framer-1h3wmky { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 40px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 40px; }", ".framer-vC2H6 .framer-1fmr7-container { flex: none; height: 32px; position: relative; width: 32px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-vC2H6.framer-1h3wmky { gap: 0px; } .framer-vC2H6.framer-1h3wmky > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-vC2H6.framer-1h3wmky > :first-child { margin-left: 0px; } .framer-vC2H6.framer-1h3wmky > :last-child { margin-right: 0px; } }", ".framer-vC2H6.framer-v-1h3wmky.hover.framer-1h3wmky { aspect-ratio: 1 / 1; height: var(--framer-aspect-ratio-supported, 40px); }"];
var FrameryErWrle5x = withCSS(Component, css, "framer-vC2H6");
var stdin_default = FrameryErWrle5x;
FrameryErWrle5x.displayName = "Chat don button";
FrameryErWrle5x.defaultProps = { height: 40, width: 40 };
addPropertyControls(FrameryErWrle5x, { Z4kvvd6jc: { title: "Click", type: ControlType.EventHandler } });
addFonts(FrameryErWrle5x, [{ explicitInter: true, fonts: [] }, ...PhosphorFonts], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};

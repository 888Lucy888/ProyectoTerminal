// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 28f3299f349ba0ff "Sense View Web App", do not edit manually */
import {
  Icon
} from "./chunk-BTSBQWPZ.js";

// /:https://framerusercontent.com/modules/5WqtymmlbtUTmcsZaxBu/21D3njHmMrwR3jR5f2Tr/Ukp4DSlEH.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, getFonts, SmartComponentScopedContainer, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var PhosphorFonts = getFonts(Icon);
var enabledGestures = { yBGp4FYzS: { hover: true } };
var cycleOrder = ["yBGp4FYzS", "Rb6X8q7qD"];
var serializationHash = "framer-CJ5bp";
var variantClassNames = { Rb6X8q7qD: "framer-v-1xzgdj1", yBGp4FYzS: "framer-v-1n1q7np" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Default: "yBGp4FYzS", Disable: "Rb6X8q7qD" };
var getProps = ({ click, height, id, mirrored, width, ...props }) => {
  return { ...props, dlEqilPPt: mirrored ?? props.dlEqilPPt, TblMbrHF6: click ?? props.TblMbrHF6, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "yBGp4FYzS" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, dlEqilPPt, TblMbrHF6, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "yBGp4FYzS", enabledGestures, ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTapqgrx19 = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (TblMbrHF6) {
      const res = await TblMbrHF6(...args);
      if (res === false) return false;
    }
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-1n1q7np", className, classNames), "data-border": true, "data-framer-name": "Default", "data-highlight": true, layoutDependency, layoutId: "yBGp4FYzS", onTap: onTapqgrx19, ref: refBinding, style: { "--border-bottom-width": "1px", "--border-color": "var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33))", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", backgroundColor: "rgba(0, 0, 0, 0)", borderBottomLeftRadius: 40, borderBottomRightRadius: 40, borderTopLeftRadius: 40, borderTopRightRadius: 40, opacity: 1, ...style }, variants: { "yBGp4FYzS-hover": { backgroundColor: "var(--token-a736bfdf-38ad-40b3-8ea8-63ab4f476a77, rgb(207, 207, 207))", opacity: 1 }, Rb6X8q7qD: { opacity: 0.5 } }, ...addPropertyOverrides({ "yBGp4FYzS-hover": { "data-framer-name": void 0 }, Rb6X8q7qD: { "data-framer-name": "Disable" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx(ComponentViewportProvider, { children: /* @__PURE__ */ _jsx(SmartComponentScopedContainer, { className: "framer-gc7vuw-container", isAuthoredByUser: true, isModuleExternal: true, layoutDependency, layoutId: "lqYiayr6e-container", nodeId: "lqYiayr6e", rendersWithMotion: true, scopeId: "Ukp4DSlEH", children: /* @__PURE__ */ _jsx(Icon, { color: "var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33))", height: "100%", iconSearch: "House", iconSelection: "CaretLeft", id: "lqYiayr6e", layoutId: "lqYiayr6e", mirrored: dlEqilPPt, selectByList: true, style: { height: "100%", width: "100%" }, weight: "light", width: "100%" }) }) }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-CJ5bp.framer-12oe39v, .framer-CJ5bp .framer-12oe39v { display: block; }", ".framer-CJ5bp.framer-1n1q7np { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 4px; position: relative; width: min-content; will-change: var(--framer-will-change-override, transform); }", ".framer-CJ5bp .framer-gc7vuw-container { flex: none; height: 32px; position: relative; width: 32px; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-CJ5bp.framer-1n1q7np { gap: 0px; } .framer-CJ5bp.framer-1n1q7np > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-CJ5bp.framer-1n1q7np > :first-child { margin-left: 0px; } .framer-CJ5bp.framer-1n1q7np > :last-child { margin-right: 0px; } }", '.framer-CJ5bp[data-border="true"]::after, .framer-CJ5bp [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }'];
var FramerUkp4DSlEH = withCSS(Component, css, "framer-CJ5bp");
var stdin_default = FramerUkp4DSlEH;
FramerUkp4DSlEH.displayName = "Button arrow";
FramerUkp4DSlEH.defaultProps = { height: 40, width: 40 };
addPropertyControls(FramerUkp4DSlEH, { variant: { options: ["yBGp4FYzS", "Rb6X8q7qD"], optionTitles: ["Default", "Disable"], title: "Variant", type: ControlType.Enum }, dlEqilPPt: { defaultValue: false, title: "Mirrored", type: ControlType.Boolean }, TblMbrHF6: { title: "Click", type: ControlType.EventHandler } });
addFonts(FramerUkp4DSlEH, [{ explicitInter: true, fonts: [] }, ...PhosphorFonts], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};

// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 28f3299f349ba0ff "Sense View Web App", do not edit manually */
// /:https://framerusercontent.com/modules/d7ApfuTZXxS7hhUJ6vk5/NBFEjyH8bFrjwXic7U7i/Qh0Nsf5mP.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ControlType, cx, SVG, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = ["qmQJd9_OR", "FXC8VseVc"];
var serializationHash = "framer-PznZi";
var variantClassNames = { FXC8VseVc: "framer-v-fojsua", qmQJd9_OR: "framer-v-13eahyv" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { "Variant 1": "qmQJd9_OR", "Variant 2": "FXC8VseVc" };
var getProps = ({ height, id, width, ...props }) => {
  return { ...props, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "qmQJd9_OR" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "qmQJd9_OR", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsx(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-13eahyv", className, classNames), "data-framer-name": "Variant 1", layoutDependency, layoutId: "qmQJd9_OR", ref: refBinding, style: { ...style }, ...addPropertyOverrides({ FXC8VseVc: { "data-framer-name": "Variant 2" } }, baseVariant, gestureVariant), children: /* @__PURE__ */ _jsx(SVG, { className: "framer-1ljgz9x", "data-framer-name": "Keyboard arrow_down", layout: "position", layoutDependency, layoutId: "q4dytFRic", opacity: 1, svg: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g transform="translate(6.692 8.692)" id="ss10231115621_1"><path d="M 5.308 6.016 L 0 0.708 L 0.708 0 L 5.308 4.6 L 9.908 0 L 10.616 0.708 Z" fill="var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33)) /* {&quot;name&quot;:&quot;Text primary&quot;} */"></path></g></svg>', svgContentId: 10231115621, withExternalLayout: true, ...addPropertyOverrides({ FXC8VseVc: { svg: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g transform="translate(6.692 8.692) rotate(180 5.308 3.008)" id="ss10919075997_1"><path d="M 5.308 6.016 L 0 0.708 L 0.708 0 L 5.308 4.6 L 9.908 0 L 10.616 0.708 Z" fill="var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33)) /* {&quot;name&quot;:&quot;Text primary&quot;} */"></path></g></svg>', svgContentId: 10919075997 } }, baseVariant, gestureVariant) }) }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-PznZi.framer-75orl5, .framer-PznZi .framer-75orl5 { display: block; }", ".framer-PznZi.framer-13eahyv { height: 24px; overflow: hidden; position: relative; width: 24px; }", ".framer-PznZi .framer-1ljgz9x { flex: none; height: 24px; left: 0px; position: absolute; top: 0px; width: 24px; }"];
var FramerQh0Nsf5mP = withCSS(Component, css, "framer-PznZi");
var stdin_default = FramerQh0Nsf5mP;
FramerQh0Nsf5mP.displayName = "Keyboard arrow_down";
FramerQh0Nsf5mP.defaultProps = { height: 24, width: 24 };
addPropertyControls(FramerQh0Nsf5mP, { variant: { options: ["qmQJd9_OR", "FXC8VseVc"], optionTitles: ["Variant 1", "Variant 2"], title: "Variant", type: ControlType.Enum } });
addFonts(FramerQh0Nsf5mP, [{ explicitInter: true, fonts: [] }], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};

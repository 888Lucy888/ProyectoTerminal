// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 28f3299f349ba0ff "Sense View Web App", do not edit manually */
import {
  stdin_default
} from "./chunk-TDMQINFC.js";

// /:https://framerusercontent.com/modules/eF1tqejCFEPAIGbI6YR4/OllzGqRNp6LSNGIq12Dq/R8sIWU5l4.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, getFonts, RichText, SmartComponentScopedContainer, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var TimeCircleAnimationFonts = getFonts(stdin_default);
var cycleOrder = ["VDkDgyqzA", "nUaMTVwgj"];
var serializationHash = "framer-mZn8B";
var variantClassNames = { nUaMTVwgj: "framer-v-ihl92x", VDkDgyqzA: "framer-v-1nlk17a" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Live: "VDkDgyqzA", Range: "nUaMTVwgj" };
var getProps = ({ border, height, id, width, ...props }) => {
  return { ...props, uUzWatT4C: border ?? props.uUzWatT4C ?? { borderColor: 'var(--token-480118fa-fa8f-477c-8519-b819382d936d, rgb(199, 6, 6)) /* {"name":"Status red"} */', borderStyle: "solid", borderWidth: 1 }, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "VDkDgyqzA" };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, uUzWatT4C, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "VDkDgyqzA", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const isDisplayed = () => {
    if (baseVariant === "nUaMTVwgj") return false;
    return true;
  };
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsxs(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-1nlk17a", className, classNames), "data-border": true, "data-framer-name": "Live", layoutDependency, layoutId: "VDkDgyqzA", ref: refBinding, style: { "--border-bottom-width": (uUzWatT4C.borderBottomWidth ?? uUzWatT4C.borderWidth) + "px", "--border-color": uUzWatT4C.borderColor, "--border-left-width": (uUzWatT4C.borderLeftWidth ?? uUzWatT4C.borderWidth) + "px", "--border-right-width": (uUzWatT4C.borderRightWidth ?? uUzWatT4C.borderWidth) + "px", "--border-style": uUzWatT4C.borderStyle, "--border-top-width": (uUzWatT4C.borderTopWidth ?? uUzWatT4C.borderWidth) + "px", backgroundColor: "var(--token-828d2e70-a56c-46d5-8a2d-e13e496f49c8, rgb(242, 242, 242))", borderBottomLeftRadius: 20, borderBottomRightRadius: 20, borderTopLeftRadius: 20, borderTopRightRadius: 20, ...style }, ...addPropertyOverrides({ nUaMTVwgj: { "data-framer-name": "Range" } }, baseVariant, gestureVariant), children: [isDisplayed() && /* @__PURE__ */ _jsx(ComponentViewportProvider, { height: 20, width: "20px", y: (componentViewport?.y || 0) + 4, children: /* @__PURE__ */ _jsx(SmartComponentScopedContainer, { className: "framer-fpdqa6-container", layoutDependency, layoutId: "uet7z4wVB-container", nodeId: "uet7z4wVB", rendersWithMotion: true, scopeId: "R8sIWU5l4", children: /* @__PURE__ */ _jsx(stdin_default, { height: "100%", HRpYUqfiX: "var(--token-eb9f2500-18d9-4fc2-9121-acbe433c2ab4, rgba(33, 181, 40, 0.3))", id: "uet7z4wVB", layoutId: "uet7z4wVB", style: { height: "100%", width: "100%" }, width: "100%" }) }) }), /* @__PURE__ */ _jsx(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.h3, { style: { "--font-selector": "RlM7TWFucm9wZS1yZWd1bGFy", "--framer-font-family": '"Manrope", "Manrope Placeholder", sans-serif', "--framer-font-size": "12px", "--framer-letter-spacing": "-0.04em", "--framer-line-height": "1.4em", "--framer-text-color": "var(--extracted-a0htzi, var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33)))" }, children: "Tiempo real" }) }), className: "framer-26a6z7", fonts: ["FS;Manrope-regular"], layoutDependency, layoutId: "ObYRY7KXf", style: { "--extracted-a0htzi": "var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33))", "--framer-link-text-color": "rgb(0, 153, 255)", "--framer-link-text-decoration": "underline" }, verticalAlignment: "top", withExternalLayout: true, ...addPropertyOverrides({ nUaMTVwgj: { children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.h3, { style: { "--font-selector": "RlM7TWFucm9wZS1yZWd1bGFy", "--framer-font-family": '"Manrope", "Manrope Placeholder", sans-serif', "--framer-font-size": "12px", "--framer-letter-spacing": "-0.04em", "--framer-line-height": "1.4em", "--framer-text-color": "var(--extracted-a0htzi, var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33)))" }, children: "01/02/2025 - 01/03/2025" }) }) } }, baseVariant, gestureVariant) })] }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-mZn8B.framer-3dax4k, .framer-mZn8B .framer-3dax4k { display: block; }", ".framer-mZn8B.framer-1nlk17a { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; padding: 4px 16px 4px 4px; position: relative; width: min-content; }", ".framer-mZn8B .framer-fpdqa6-container { flex: none; height: 20px; position: relative; width: 20px; }", ".framer-mZn8B .framer-26a6z7 { flex: none; height: auto; position: relative; white-space: pre; width: auto; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-mZn8B.framer-1nlk17a { gap: 0px; } .framer-mZn8B.framer-1nlk17a > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-mZn8B.framer-1nlk17a > :first-child { margin-left: 0px; } .framer-mZn8B.framer-1nlk17a > :last-child { margin-right: 0px; } }", '.framer-mZn8B[data-border="true"]::after, .framer-mZn8B [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }'];
var FramerR8sIWU5l4 = withCSS(Component, css, "framer-mZn8B");
var stdin_default2 = FramerR8sIWU5l4;
FramerR8sIWU5l4.displayName = "Time animation";
FramerR8sIWU5l4.defaultProps = { height: 28, width: 109 };
addPropertyControls(FramerR8sIWU5l4, { variant: { options: ["VDkDgyqzA", "nUaMTVwgj"], optionTitles: ["Live", "Range"], title: "Variant", type: ControlType.Enum }, uUzWatT4C: { defaultValue: { borderColor: 'var(--token-480118fa-fa8f-477c-8519-b819382d936d, rgb(199, 6, 6)) /* {"name":"Status red"} */', borderStyle: "solid", borderWidth: 1 }, title: "Border", type: ControlType.Border } });
addFonts(FramerR8sIWU5l4, [{ explicitInter: true, fonts: [{ family: "Manrope", source: "fontshare", style: "normal", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/2TYFCBHUANEXS6QGR5EQDUNAFH6LSWM3/AYNOU3VEA4LRTDNKJQUFNVNUTYSGOUOP/UXO4O7K2G3HI3D2VKD7UXVJVJD26P4BQ.woff2", weight: "400" }] }, ...TimeCircleAnimationFonts], { supportsExplicitInterCodegen: true });

export {
  stdin_default2 as stdin_default
};

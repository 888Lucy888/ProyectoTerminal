// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 28f3299f349ba0ff "Sense View Web App", do not edit manually */
import {
  Icon
} from "./chunk-BTSBQWPZ.js";

// /:https://framerusercontent.com/modules/rGYrHadvKhVQmdQY6oQZ/J3tXFU6ptbNOel1mmMGM/sQFMTJb6h.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { addFonts, addPropertyControls, ComponentViewportProvider, ControlType, cx, getFonts, RichText, SmartComponentScopedContainer, useActiveVariantCallback, useComponentViewport, useLocaleInfo, useVariantState, withCSS } from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var PhosphorFonts = getFonts(Icon);
var cycleOrder = ["Qh8vXYgDD", "RYrZj4HNE"];
var serializationHash = "framer-IKDiA";
var variantClassNames = { Qh8vXYgDD: "framer-v-1o9kf7a", RYrZj4HNE: "framer-v-1m4c8f3" };
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants?.forEach((variant) => variant && Object.assign(nextOverrides, overrides[variant]));
  return nextOverrides;
}
var transition1 = { bounce: 0.2, delay: 0, duration: 0.4, type: "spring" };
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = { Button: "RYrZj4HNE", Input: "Qh8vXYgDD" };
var getProps = ({ click, fontSize, height, id, width, ...props }) => {
  return { ...props, gS4RGno_3: fontSize ?? props.gS4RGno_3 ?? 16, variant: humanReadableVariantMap[props.variant] ?? props.variant ?? "Qh8vXYgDD", YIpo37bCB: click ?? props.YIpo37bCB };
};
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();
  const { style, className, layoutId, variant, YIpo37bCB, gS4RGno_3, ...restProps } = getProps(props);
  const { baseVariant, classNames, clearLoadingGesture, gestureHandlers, gestureVariant, isLoading, setGestureState, setVariant, variants } = useVariantState({ cycleOrder, defaultVariant: "Qh8vXYgDD", ref: refBinding, variant, variantClassNames });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } = useActiveVariantCallback(baseVariant);
  const onTapcus0tz = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (YIpo37bCB) {
      const res = await YIpo37bCB(...args);
      if (res === false) return false;
    }
  });
  const onMouseLeave1md7oje = activeVariantCallback(async (...args) => {
    setGestureState({ isHovered: false });
    await delay(() => setVariant("RYrZj4HNE"), 3e6);
  });
  const onTapa5q1jc = activeVariantCallback(async (...args) => {
    setGestureState({ isPressed: false });
    if (YIpo37bCB) {
      const res = await YIpo37bCB(...args);
      if (res === false) return false;
    }
    setVariant("Qh8vXYgDD");
  });
  const sharedStyleClassNames = [];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
  const isDisplayed = () => {
    if (baseVariant === "RYrZj4HNE") return false;
    return true;
  };
  return /* @__PURE__ */ _jsx(LayoutGroup, { id: layoutId ?? defaultLayoutId, children: /* @__PURE__ */ _jsx(Variants, { animate: variants, initial: false, children: /* @__PURE__ */ _jsx(Transition, { value: transition1, children: /* @__PURE__ */ _jsxs(motion.div, { ...restProps, ...gestureHandlers, className: cx(scopingClassNames, "framer-1o9kf7a", className, classNames), "data-border": true, "data-framer-name": "Input", "data-highlight": true, layoutDependency, layoutId: "Qh8vXYgDD", onMouseLeave: onMouseLeave1md7oje, onTap: onTapcus0tz, ref: refBinding, style: { "--border-bottom-width": "1px", "--border-color": "var(--token-a736bfdf-38ad-40b3-8ea8-63ab4f476a77, rgb(207, 207, 207))", "--border-left-width": "1px", "--border-right-width": "1px", "--border-style": "solid", "--border-top-width": "1px", backgroundColor: "var(--token-1cc31cbf-3fd9-4f03-9a8f-5577c8364f43, rgb(186, 186, 186))", borderBottomLeftRadius: 16, borderBottomRightRadius: 16, borderTopLeftRadius: 16, borderTopRightRadius: 16, ...style }, variants: { RYrZj4HNE: { borderBottomLeftRadius: 40, borderBottomRightRadius: 40, borderTopLeftRadius: 40, borderTopRightRadius: 40 } }, ...addPropertyOverrides({ RYrZj4HNE: { "data-framer-name": "Button", onTap: onTapa5q1jc } }, baseVariant, gestureVariant), children: [/* @__PURE__ */ _jsx(ComponentViewportProvider, { children: /* @__PURE__ */ _jsx(SmartComponentScopedContainer, { className: "framer-tv1r6e-container", isAuthoredByUser: true, isModuleExternal: true, layoutDependency, layoutId: "Qh8vXYgDDXceW4NYLl-container", nodeId: "Qh8vXYgDDXceW4NYLl", rendersWithMotion: true, scopeId: "sQFMTJb6h", children: /* @__PURE__ */ _jsx(Icon, { color: "var(--token-48c95b4e-44f6-4ac3-b044-c0cab34489dd, rgb(33, 33, 33))", height: "100%", iconSearch: "", iconSelection: "MagnifyingGlass", id: "Qh8vXYgDDXceW4NYLl", layoutId: "Qh8vXYgDDXceW4NYLl", mirrored: false, selectByList: true, style: { height: "100%", width: "100%" }, weight: "light", width: "100%" }) }) }), isDisplayed() && /* @__PURE__ */ _jsx(RichText, { __fromCanvasComponent: true, children: /* @__PURE__ */ _jsx(React.Fragment, { children: /* @__PURE__ */ _jsx(motion.h5, { style: { "--font-selector": "RlM7TWFucm9wZS12YXJpYWJsZVZGPUluZG5hSFFpSURRd01BPT0=", "--framer-font-family": '"Manrope Variable", "Manrope Placeholder", sans-serif', "--framer-font-size": "calc(var(--variable-reference-gS4RGno_3-sQFMTJb6h) * 1px)", "--framer-font-variation-axes": 'var(--extracted-198i5e0, "wght" 400)', "--framer-line-height": "1.4em", "--framer-text-color": "var(--extracted-1lwpl3i, var(--token-ae763b4d-0850-43bc-acae-ea5050cc491d, rgb(61, 61, 61)))" }, children: "Buscar\u2026" }) }), className: "framer-4vceaa", fonts: ["FS;Manrope-variable"], layoutDependency, layoutId: "BlOGi808N", style: { "--extracted-198i5e0": '"wght" 400', "--extracted-1lwpl3i": "var(--token-ae763b4d-0850-43bc-acae-ea5050cc491d, rgb(61, 61, 61))", "--framer-paragraph-spacing": "0px", "--variable-reference-gS4RGno_3-sQFMTJb6h": gS4RGno_3 }, verticalAlignment: "top", withExternalLayout: true })] }) }) }) });
});
var css = ["@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }", ".framer-IKDiA.framer-v7jak4, .framer-IKDiA .framer-v7jak4 { display: block; }", ".framer-IKDiA.framer-1o9kf7a { align-content: center; align-items: center; cursor: text; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 48px; justify-content: flex-start; overflow: hidden; padding: 8px; position: relative; width: 194px; will-change: var(--framer-will-change-override, transform); }", ".framer-IKDiA .framer-tv1r6e-container { flex: none; height: 24px; position: relative; width: 24px; }", ".framer-IKDiA .framer-4vceaa { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre; width: auto; }", "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-IKDiA.framer-1o9kf7a { gap: 0px; } .framer-IKDiA.framer-1o9kf7a > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } .framer-IKDiA.framer-1o9kf7a > :first-child { margin-left: 0px; } .framer-IKDiA.framer-1o9kf7a > :last-child { margin-right: 0px; } }", ".framer-IKDiA.framer-v-1m4c8f3.framer-1o9kf7a { cursor: pointer; justify-content: center; width: 48px; }", '.framer-IKDiA[data-border="true"]::after, .framer-IKDiA [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }'];
var FramersQFMTJb6h = withCSS(Component, css, "framer-IKDiA");
var stdin_default = FramersQFMTJb6h;
FramersQFMTJb6h.displayName = "Search bar";
FramersQFMTJb6h.defaultProps = { height: 48, width: 194 };
addPropertyControls(FramersQFMTJb6h, { variant: { options: ["Qh8vXYgDD", "RYrZj4HNE"], optionTitles: ["Input", "Button"], title: "Variant", type: ControlType.Enum }, YIpo37bCB: { title: "Click", type: ControlType.EventHandler }, gS4RGno_3: { defaultValue: 16, title: "Font Size", type: ControlType.Number } });
var variationAxes = [{ defaultValue: 200, maxValue: 800, minValue: 200, name: "Weight", tag: "wght" }];
addFonts(FramersQFMTJb6h, [{ explicitInter: true, fonts: [{ family: "Manrope", source: "fontshare", style: "normal", url: "https://framerusercontent.com/third-party-assets/fontshare/wf/6KNUAYMK3PTPQA22366IWF5JUVT35NZ3/E4CLT6PE4W64IV56BHAWFRZFLHPZIXFF/DEPNXL2T77QGX4DXZAN3G53TXHO2JEFP.woff2", variationAxes, weight: "400" }] }, ...PhosphorFonts], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};
